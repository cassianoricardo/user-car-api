#!/usr/bin/env groovy
pipeline {
    agent any
    tools {
        maven 'Maven 3.9.4'
        jdk 'OpenJDK'
    }
    stages {
        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean package'
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        stage('SonarQube') {
            steps {
                sh 'mvn sonar:sonar -X -Dsonar.host.url=http://localhost:9000 -Dsonar.token=squ_dbf30b591813811b8b75f0c280fbc437266d2f2c'
            }
        }
        stage('Deployment') {
            steps {
             sh "pid=\$(lsof -i:8989 -t); kill -TERM \$pid || kill -KILL \$pid"
             sh 'nohup ./mvnw spring-boot:run -Dserver.port=8081 &'
            }
        }
    }
}